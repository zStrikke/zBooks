worker_processes auto;

events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    include /etc/nginx/mime.types;

    gzip on;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/jpeg image/png;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 443 ssl;
        listen [::]:443;
        listen 80;
        listen [::]:80;
        server_name zbooks.test;
        
        http2 on;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_pass http://frontend;

        # proxy ws
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 86400;
    }

        location /api {
            proxy_pass http://nginx;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        ssl_certificate /etc/letsencrypt/live/api.books.test/nginx-selfsigned.crt; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.books.test/nginx-selfsigned.key; # managed by Certbot
        #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        # Redirect non-https traffic to https
        # if ($scheme != "https") {
        #    return 301 https://$host$request_uri;
        # } # managed by Certbot
    }
}
